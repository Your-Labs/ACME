#!/bin/bash
# ---------------------------------------------------------------
# Pre Configuration
ROOT=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
SOURCE_SH="$ROOT/source.sh"
[[ -f "$SOURCE_SH" ]] && source "$SOURCE_SH"
ROOT=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
# ------------------------------------------------------------------------------
# extract the default environment variables from the environment
env2default
# ==============================================================================
# defauly values
DRY_RUN=''
CONFIG_DIR=''
RUN_POST_HOOK_ARG=""
DRY_RUN_ARG=''
# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
    --dry-run)
        DRY_RUN=1
        DRY_RUN_ARG="--dry-run"
        shift
        ;;
    --config-dir | --config | -c)
        CONFIG_DIR=$2
        shift 2
        ;;
    --run-post-hook)
        RUN_POST_HOOK_ARG='--run-post-hook'
        shift
        ;;
    *)
        mylog "error" "Unknown option: $1, ignoring the option."
        # help
        shift
        ;;
    esac
done
# ---------------------------------------------------------------
CONFIG_DIR=${CONFIG_DIR:-$MYACME_ISSUES_CONFIG_DIR}
# ---------------------------------------------------------------
# Check if CONFIG_DIR is a valid directory
if [ ! -d "$CONFIG_DIR" ]; then
    mylog "error" "CONFIG_DIR is not a valid directory: $CONFIG_DIR"
    exit 1
fi

# ------------------------------------------------------------------------------
# Source all shell script files in CONFIG_DIR
# And execute MYACME_BIN_INSTALL_CERT
ALL_CONFIGS=$(find "$CONFIG_DIR" -maxdepth 1 -name "[0-9]*.sh" -type f | sort)
NUM=0
for config in ${ALL_CONFIGS[@]}; do
    NUM=$(expr ${NUM} + 1)
    # cover the default environment variables to the environment
    # this is to make sure the default environment variables are always available
    default2env
    export ACME_ISSUE_CONFIG="$config"
    mylog "info" "Sourcing $ACME_ISSUE_CONFIG"
    export ACME_ISSUE_ENABLE=false
    source "$ACME_ISSUE_CONFIG"
    if [ "$DRY_RUN" == "1" ]; then
        # if DRY_RUN is enabled, set ACME_DRY_RUN to true
        export ACME_DRY_RUN="true"
    fi
    if [ "$ACME_ISSUE_ENABLE" != "true" ]; then
        mylog "info" "Skipping $ACME_ISSUE_CONFIG"
        continue
    fi
    echo "source $MYACME_BIN_INSTALL_CERT --config $ACME_ISSUE_CONFIG $DRY_RUN_ARG $RUN_POST_HOOK_ARG"
    source $MYACME_BIN_INSTALL_CERT --config "$ACME_ISSUE_CONFIG" $DRY_RUN_ARG "$RUN_POST_HOOK_ARG" || true
done

# If no scripts found in CONFIG_DIR, execute MYACME_BIN_INSTALL_CERT directly
# MYACME_BIN_INSTALL_CERT will extract the environment variables from the environment
if [ $NUM -eq 0 ]; then
    mylog "warn" "No scripts found in $CONFIG_DIR"
    mylog "warn" "You may need to call \"instll_cert\""
fi

default2env
