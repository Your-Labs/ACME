#!/bin/bash
# ---------------------------------------------------------------
# Pre Configuration
ROOT=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
SOURCE_SH="$ROOT/source.sh"
if [ -f "$SOURCE_SH" ]; then
    source "$SOURCE_SH"
else
    mylog "warn" "Unable to find $SOURCE_SH file. Ignoring source.sh."
fi
ROOT=$(dirname "$(readlink -f "${BASH_SOURCE[0]}")")
# ---------------------------------------------------------------
# Default values
RUN_SH_DIR=""
PRE_DEFINE_SH_DIR=""
DISABLE_PRE_DEFINED=""
DRY_RUN=""
ADD_X_PERSSION=1
CONFIG_FILE=""
MODE="" # pre, post, renew
INSTALL_CERT=""
INSTALL_CERT_DIR=""
INSTALL_CERT_UNIT_NAME=""
# ---------------------------------------------------------------
# Parse command-line arguments
while [[ $# -gt 0 ]]; do
    case $1 in
    --dry-run)
        DRY_RUN=1
        shift
        ;;
    -d | --dir)
        RUN_SH_DIR=$2
        shift 2
        ;;
    --disable-pre-defined)
        DISABLE_PRE_DEFINED=1
        shift
        ;;
    --config-file | --config | -c)
        CONFIG_FILE=$2
        shift 2
        ;;
    --pre-dir)
        PRE_DEFINE_SH_DIR=$2
        shift 2
        ;;
    --mode | -m)
        MODE=$2
        shift 2
        ;;
    --install-cert)
        INSTALL_CERT=true
        INSTALL_CERT_DIR=$2
        shift 2
        ;;
    --install-cert-unit)
        INSTALL_CERT_UNIT_NAME=true
        shift 2
        ;;
    *)
        mylog "error" "Unknown option: $1"
        # help
        exit 1
        ;;
    esac
done
# ---------------------------------------------------------------
# Script Logic
# ---------------------------------------------------------------

if [ -n "$CONFIG_FILE" ] || [ "$CONFIG_FILE" != "-" ]; then
    if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
    else
        mylog "warn" "Config file $CONFIG_FILE does not exist. Ignoring the file."
    fi
fi

if [ -z "$MODE" ]; then
    mylog "error" "Mode is not set. Please set the mode. [pre, post, renew]"
    exit 1
fi

case $MODE in
pre)
    MESSAGE="Executing scripts before issue"
    RUN_SH_DIR=${RUN_SH_DIR:-$ACME_ISSUE_PRE_HOOK_DIR}
    DISABLE_PRE_DEFINED=${DISABLE_PRE_DEFINED:-$ACME_ISSUE_PRE_HOOK_DIABLE_PRE_DEFINED}
    INSTALL_CERT=0
    ;;
post)
    MESSAGE="Executing scripts after issue"
    RUN_SH_DIR=${RUN_SH_DIR:-$ACME_ISSUE_POST_HOOK_DIR}
    DISABLE_PRE_DEFINED=${DISABLE_PRE_DEFINED:-$ACME_ISSUE_POST_HOOK_DIABLE_PRE_DEFINED}
    if [ ! -z "$INSTALL_CERT_DIR" ]; then
        INSTALL_CERT=0
    fi
    INSTALL_CERT=${INSTALL_CERT:-$ACME_INSTALL_CERT}
    ;;
renew)
    MESSAGE="Executing scripts after renew"
    RUN_SH_DIR=${RUN_SH_DIR:-$ACME_ISSUE_RENEW_HOOK_DIR}
    DISABLE_PRE_DEFINED=${DISABLE_PRE_DEFINED:-$ACME_ISSUE_RENEW_HOOK_DIABLE_PRE_DEFINED}
    INSTALL_CERT=0
    ;;
*)
    mylog "error" "Unknown mode: $MODE"
    exit 1
    ;;
esac
# If the diable pre-defined is not set, set it to 0
DISABLE_PRE_DEFINED=${DISABLE_PRE_DEFINED:-0}
DRY_RUN=${DRY_RUN:-$ACME_DRY_RUN}
INSTALL_CERT_UNIT_NAME=${INSTALL_CERT_UNIT_NAME:-$ACME_INSTALL_CERT_UNIT_NAME}
# ---------------------------------------------------------------
# infomation
mylog "split" "====== Initial Configuration for ${MODE} hook ======"
mylog "info" "Dry Run: $DRY_RUN"
mylog "info" "Mode: $MODE"
mylog "info" "Add executable permission: $ADD_X_PERSSION"
mylog "info" "Disable pre-defined scripts: $DISABLE_PRE_DEFINED"
mylog "info" "Pre-Defined Directory: $PRE_DEFINE_SH_DIR"
mylog "info" "Post Directory: $RUN_SH_DIR"
mylog "info" "Config file: $CONFIG_FILE"
mylog "info" "Install Cert: $INSTALL_CERT"
mylog "info" "Install Cert Dir: $INSTALL_CERT_DIR"
mylog "info" "Install Cert Unit Name: $INSTALL_CERT_UNIT_NAME"
mylog "split" "==================================="
# ---------------------------------------------------------------

# Install the cert after issue
if [ "$INSTALL_CERT" -eq 1 ] || [ "$INSTALL_CERT" = "true" ]; then
    source $MYACME_BIN_INSTALL_CERT --config-file $CONFIG_FILE

fi

# execute the script in the given directory
if [ "$DISABLE_PRE_DEFINED" -eq 0 ] || [ "$DISABLE_PRE_DEFINED" = "false" ]; then
    mylog "info" "[pre-defined] - "$MESSAGE
    run_dir "$PRE_DEFINE_SH_DIR" $ADD_X_PERSSION $DRY_RUN || true
fi

mylog "info" "[custom] - "$MESSAGE
run_dir "$RUN_SH_DIR" $ADD_X_PERSSION $DRY_RUN || true
