name: Build Docker Image for Multiple Architectures

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'scripts/**'
      - 'Dockerfile'
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DOCKER_DRIVER: overlay2
      DOCKER_TLS_CERTDIR: ""
      CI_REGISTRY_IMAGE: ghcr.io/your-labs/acme

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Set Docker Image Variables
        run: |
          if [ "${{ github.event_name }}" = "create" ]; then
            export IMAGE_VERSION=${{ github.ref_name }}
            export DOCKER_IMAGE_NAME_LATEST="${{ env.CI_REGISTRY_IMAGE }}:latest"
            export DOCKER_IMAGE_NAME_VERSION="${{ env.CI_REGISTRY_IMAGE }}:${{ github.ref_name }}"
          else
            export IMAGE_VERSION=nightly
            export DOCKER_IMAGE_NAME_NIGHTLY="${{ env.CI_REGISTRY_IMAGE }}:nightly"
          fi
          echo "IMAGE_VERSION=${IMAGE_VERSION}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME_LATEST=${DOCKER_IMAGE_NAME_LATEST}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME_VERSION=${DOCKER_IMAGE_NAME_VERSION}" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME_NIGHTLY=${DOCKER_IMAGE_NAME_NIGHTLY}" >> $GITHUB_ENV

      - name: Build and Push Docker Image
        if: ${{ github.event_name == 'push' || github.event_name == 'create' || github.event_name == 'workflow_dispatch' }}
        run: |
          docker buildx create --use
          if [ "${{ github.event_name }}" = "create" ]; then
            docker buildx build \
              --build-arg VERSION=${IMAGE_VERSION} \
              --platform linux/amd64 \
              -t ${DOCKER_IMAGE_NAME_LATEST} \
              -t ${DOCKER_IMAGE_NAME_VERSION} \
              --push .
          else
            docker buildx build \
              --build-arg VERSION=${IMAGE_VERSION} \
              --platform linux/amd64 \
              -t ${DOCKER_IMAGE_NAME_NIGHTLY} \
              --push .
          fi